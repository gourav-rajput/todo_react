{"ast":null,"code":"import { ADD_NEW, TOGGLE_COMPLETE, DELETE_TODO } from \"../actionTypes\";\nexport var addNew = function addNew() {\n  var listItem = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch) {\n    return dispatch({\n      type: ADD_NEW,\n      payload: {\n        listItem: listItem\n      }\n    });\n  };\n};\nexport var toggleComplete = function toggleComplete(id) {\n  return function (dispatch) {\n    return dispatch({\n      type: TOGGLE_COMPLETE,\n      payload: {\n        id: id\n      }\n    });\n  };\n};\nexport var deleteTodo = function deleteTodo(id) {\n  return function (dispatch) {\n    return dispatch({\n      type: DELETE_TODO,\n      payload: {\n        id: id\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/inclov/Documents/stuff/todo_react/src/app/actions/index.js"],"names":["ADD_NEW","TOGGLE_COMPLETE","DELETE_TODO","addNew","listItem","dispatch","type","payload","toggleComplete","id","deleteTodo"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,eAAlB,EAAmCC,WAAnC,QAAsD,gBAAtD;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS;AAAA,MAACC,QAAD,uEAAY,EAAZ;AAAA,SAAmB,UAAAC,QAAQ;AAAA,WAAIA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,OAAR;AAAiBO,MAAAA,OAAO,EAAE;AAAEH,QAAAA,QAAQ,EAARA;AAAF;AAA1B,KAAD,CAAZ;AAAA,GAA3B;AAAA,CAAf;AAEP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,EAAE;AAAA,SAAI,UAAAJ,QAAQ;AAAA,WAAIA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,eAAR;AAAyBM,MAAAA,OAAO,EAAE;AAAEE,QAAAA,EAAE,EAAFA;AAAF;AAAlC,KAAD,CAAZ;AAAA,GAAZ;AAAA,CAAzB;AAEP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAAAD,EAAE;AAAA,SAAI,UAAAJ,QAAQ;AAAA,WAAIA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAR;AAAqBK,MAAAA,OAAO,EAAE;AAAEE,QAAAA,EAAE,EAAFA;AAAF;AAA9B,KAAD,CAAZ;AAAA,GAAZ;AAAA,CAArB","sourcesContent":["import { ADD_NEW, TOGGLE_COMPLETE, DELETE_TODO } from \"../actionTypes\";\n\nexport const addNew = (listItem = {}) => dispatch => dispatch({ type: ADD_NEW, payload: { listItem } })\n \nexport const toggleComplete = id => dispatch => dispatch({ type: TOGGLE_COMPLETE, payload: { id } })\n\nexport const deleteTodo = id => dispatch => dispatch({ type: DELETE_TODO, payload: { id } })"]},"metadata":{},"sourceType":"module"}